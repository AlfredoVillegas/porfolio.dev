---
import GitHub from './icons/GitHub.astro';
import NextJS from './icons/NextJS.astro';
import React from './icons/React.astro';
import Tailwind from './icons/Tailwind.astro';
import LinkButton from './LinkButton.astro';
import Nestjs from './icons/Nestjs.astro';
import NodeIcon from './icons/NodeIcon.astro';
import Postgre from './icons/PostgreSql.astro';
import Express from './icons/Express.astro';
import Typescript from './icons/TypeScriptIcon.astro';
import Jest from './icons/Jest.astro';
import Cloudinary from './icons/Cloudinary.astro';
import Javascript from './icons/JavascriptIcon.astro';
import Teeam from './icons/Teeam.astro';
import Youtube from './icons/Youtube.astro';

const TAGS = {
  NEXT: {
    name: 'Next.js',
    class: 'bg-black text-white',
    icon: NextJS
  },
  TAILWIND: {
    name: 'Tailwind CSS',
    class: 'bg-[#003159] text-white',
    icon: Tailwind
  },
  REACT: {
    name: 'React.js',
    class: 'bg-gray-800 text-white',
    icon: React
  },
  NEST: {
    name: 'Nest.js',
    class: 'bg-gray-800 text-white',
    icon: Nestjs
  },
  Node: {
    name: 'Node.js',
    class: 'bg-gray-800 text-white',
    icon: NodeIcon
  },
  POSTGRE: {
    name: 'PostgreSQL',
    class: 'bg-gray-800 text-white',
    icon: Postgre
  },
  EXPRESS: {
    name: 'Express.js',
    class: 'bg-gray-300 text-black',
    icon: Express
  },
  TYPESCRIPT: {
    name: 'TypeScript',
    class: 'bg-gray-800 text-white',
    icon: Typescript
  },
  JEST: {
    name: 'Jest-Testing',
    class: 'bg-gray-800 text-white',
    icon: Jest
  },
  CLOUDINARY: {
    name: 'Cloudinary',
    class: 'bg-gray-800 text-white',
    icon: Cloudinary
  },
  JAVASCRIPT: {
    name: 'JavaScript',
    class: 'bg-gray-800 text-white',
    icon: Javascript
  },
  TEAM: {
    name: 'En equipo',
    class: 'bg-gray-800 text-white',
    icon: Teeam
  }
};

const PROJECTS = [
  {
    title: 'Insti-Conecta',
    description:
      'Plataforma de gestión administrativa escolar para gestionar usuarios, asigna secciones y materias a cada grado, registra calificaciones y asistencia de los alumnos. Fui responsable del desarrollo del back-end.',
    github: 'https://github.com/No-Country/s5-08-ts-react',
    image: '/projects/insti-conecta-o.jpg',
    tags: [TAGS.Node, TAGS.TYPESCRIPT, TAGS.NEST, TAGS.POSTGRE, TAGS.REACT, TAGS.TEAM]
  },
  {
    title: 'Pet-Space',
    description:
      'Web donde puedes registrar tus mascotas y pertenecer a una comunidad que se apoya en caso de extravíos, permitiéndote registrarla con una serie de atributos que ayudan a localizarla o publicarla. Aplica filtros para mejorar el éxito en tus búsquedas. Creada desde cero en equipo, fui responsable del desarrollo del back-end y la gestión de la base de datos.',
    //link: 'https://adventjs.dev',
    image: '/projects/pet-space.jpg',
    video: 'https://drive.google.com/file/d/1OzirU5GjBT_beU12M2hJeoHVH5rjybVp/view?usp=drive_link',
    github: 'https://github.com/No-Country/C7-G35',
    tags: [TAGS.EXPRESS, TAGS.TYPESCRIPT, TAGS.Node, TAGS.CLOUDINARY, TAGS.POSTGRE, TAGS.TEAM]
  },
  {
    title: 'Project-Management',
    description:
      'API Rest para administración de proyectos con sincronización a Github. Desarrollado bajo arquitectura limpia para facilitar el mantenimiento y la escalabilidad. Implementación de testing unitario para asegurar la calidad del código.',
    github: 'https://github.com/AlfredoVillegas/project-management',
    //image: '/projects/adventjs.web',
    tags: [TAGS.EXPRESS, TAGS.Node, TAGS.TYPESCRIPT, TAGS.JEST, TAGS.POSTGRE]
  },
  {
    title: 'AlkyBank',
    description:
      'Desarrollamos la API de AlkyBank, una app Wallet. Realicé pruebas e2e para asegurar la calidad de la API, utilicé JSON Web Token para autenticar a los usuarios y autorizar el acceso a los recursos. Desarrollado en equipo bajo metodologías ágiles.',
    //link: "https://sadasd.dev",
    github: 'https://github.com/AlfredoVillegas/grupo-n-3-Alkybank',
    //image: '/projects/adventjs.web',
    tags: [TAGS.EXPRESS, TAGS.Node, TAGS.JAVASCRIPT, TAGS.JEST, TAGS.TEAM]
  }
];
---

<section class="grid md:grid-cols-1 gap-x-10 gap-y-16">
  {
    PROJECTS.map(({ image, title, description, tags, video, github }) => (
      <article>
        <h3 class="text-2xl font-semibold text-primary-200 mb-2">{title}</h3>
        <p class="text-lg mb-4 text-pretty text-gray-300/90">{description}</p>
        <ul class="flex flex-wrap gap-2  mb-2">
          {tags.map(tag => (
            <li>
              <span class={`flex gap-x-2 rounded-full text-xs ${tag.class} py-1 px-2 `}>
                <tag.icon class="size-4" />
                {tag.name}
              </span>
            </li>
          ))}
        </ul>
        {image && (
          <img
            loading="lazy"
            class="rounded object-center shadow-2xl shadow-white/10 aspect-video"
            src={image}
            alt={`Captura de pantalla del proyecto ${image}`}
          />
        )}

        <footer class="flex gap-x-4 items-end justify-start mt-4">
          {github && (
            <LinkButton href={github}>
              <GitHub class="size-6" />
              Ver código fuente
            </LinkButton>
          )}
          
          )}
          {video && (
            <>
              <LinkButton href={video}>
                <Youtube />
                Ver video presentación
              </LinkButton>
            </>
          )}
        </footer>
      </article>
    ))
  }
</section>
